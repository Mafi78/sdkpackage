
/**
 * Generated ZTL Class for PostResponseParser
 * 
 * DO NOT EDIT, ROOT SOURCE for custom functions in /spec/contribution.ztl
 */
class org.scn.community.utils.PostResponseParser extends org.scn.community.shared.Component {

	/**
	 * Sets Basic Authorization Content [Basic: GUID] Property
	 */	
	void setBasicAuthorisation( /**Basic Authorization Content [Basic: GUID]*/ String basicAuthorisation){*
		this.DBasicAuthorisation = basicAuthorisation;
	*}

	/**
	 * Gets Basic Authorization Content [Basic: GUID] Property
	 */	
	String getBasicAuthorisation() {*
		return this.DBasicAuthorisation;
	*}

	/**
	 * Gets Clean All Parameters Property
	 */	
	String getCleanAll() {*
		return this.DCleanAll;
	*}

	/**
	 * Sets Content Type Property
	 */	
	void setContentType( /**Content Type*/ String contentType){*
		this.DContentType = contentType;
	*}

	/**
	 * Gets Content Type Property
	 */	
	String getContentType() {*
		return this.DContentType;
	*}

	/**
	 * Sets Is This Request Cross-Domain Property
	 */	
	void setCrossDomain( /**Is This Request Cross-Domain*/ boolean crossDomain){*
		this.DCrossDomain = crossDomain;
	*}

	/**
	 * Gets Is This Request Cross-Domain Property
	 */	
	boolean isCrossDomain() {*
		return this.DCrossDomain;
	*}

	/**
	 * Sets Expected Content Type Property by String
	 */	
	void setExpectedContentTypeByString( /**Expected Content Type*/ String expectedContentType){*
		this.DExpectedContentType = expectedContentType;
	*}

	/**
	 * Gets Expected Content Type Property as String
	 */	
	String getExpectedContentTypeAsString() {*
		return this.DExpectedContentType;
	*}
	
	/**
	 * Sets Expected Content Type Property by Choice Option
	 */	
	void setExpectedContentType( /**Expected Content Type*/ org_scn_community_shared_Enumfield expectedContentType){*
		this.DExpectedContentType = expectedContentType;
	*}
	
	/**
	 * Gets Expected Content Type Property as Choice Option
	 */	
	org_scn_community_shared_Enumfield getExpectedContentType() {*
		return this.DExpectedContentType;
	*}

	/**
	 * Sets Response Status For Good Response Property
	 */	
	void setExpectedResponseStatus( /**Response Status For Good Response*/ int expectedResponseStatus){*
		this.DExpectedResponseStatus = expectedResponseStatus;
	*}

	/**
	 * Gets Response Status For Good Response Property
	 */	
	int getExpectedResponseStatus() {*
		return this.DExpectedResponseStatus;
	*}

	/**
	 * Gets List Of Headers (Name / Value) Property
	 */	
	String getHeaders() {*
		return this.DHeaders;
	*}

	/**
	 * Sets Do You Want To Use JSONP Property
	 */	
	void setJsonp( /**Do You Want To Use JSONP*/ boolean jsonp){*
		this.DJsonp = jsonp;
	*}

	/**
	 * Gets Do You Want To Use JSONP Property
	 */	
	boolean isJsonp() {*
		return this.DJsonp;
	*}

	/**
	 * Gets List Of Parameters (Name / Value) Property
	 */	
	String getParameters() {*
		return this.DParameters;
	*}

	/**
	 * Gets HTTP Reuqest Payload Property
	 */	
	String getPayload() {*
		return this.DPayload;
	*}

	/**
	 * Gets Raw Parameters As String Content Property
	 */	
	String getRawParameters() {*
		return this.DRawParameters;
	*}

	/**
	 * Sets Request Method (POST | GET | PUT) Property by String
	 */	
	void setRequestMethodByString( /**Request Method (POST | GET | PUT)*/ String requestMethod){*
		this.DRequestMethod = requestMethod;
	*}

	/**
	 * Gets Request Method (POST | GET | PUT) Property as String
	 */	
	String getRequestMethodAsString() {*
		return this.DRequestMethod;
	*}
	
	/**
	 * Sets Request Method (POST | GET | PUT) Property by Choice Option
	 */	
	void setRequestMethod( /**Request Method (POST | GET | PUT)*/ org_scn_community_shared_Enumfield requestMethod){*
		this.DRequestMethod = requestMethod;
	*}
	
	/**
	 * Gets Request Method (POST | GET | PUT) Property as Choice Option
	 */	
	org_scn_community_shared_Enumfield getRequestMethod() {*
		return this.DRequestMethod;
	*}

	/**
	 * Sets Request Type (JQuery | HTTP) Property by String
	 */	
	void setRequestTypeByString( /**Request Type (JQuery | HTTP)*/ String requestType){*
		this.DRequestType = requestType;
	*}

	/**
	 * Gets Request Type (JQuery | HTTP) Property as String
	 */	
	String getRequestTypeAsString() {*
		return this.DRequestType;
	*}
	
	/**
	 * Sets Request Type (JQuery | HTTP) Property by Choice Option
	 */	
	void setRequestType( /**Request Type (JQuery | HTTP)*/ org_scn_community_shared_Enumfield requestType){*
		this.DRequestType = requestType;
	*}
	
	/**
	 * Gets Request Type (JQuery | HTTP) Property as Choice Option
	 */	
	org_scn_community_shared_Enumfield getRequestType() {*
		return this.DRequestType;
	*}

	/**
	 * Gets Return Headers Property
	 */	
	String getReturnHeaders() {*
		return this.DReturnHeaders;
	*}

	/**
	 * Gets Return Parameters Property
	 */	
	String getReturnParameters() {*
		return this.DReturnParameters;
	*}

	/**
	 * Gets Return Response As String Property
	 */	
	String getReturnResponse() {*
		return this.DReturnResponse;
	*}

	/**
	 * Gets Return Status Property
	 */	
	int getReturnStatus() {*
		return this.DReturnStatus;
	*}

	/**
	 * Gets Just As Simple Triger Property
	 */	
	String getTrigger() {*
		return this.DTrigger;
	*}

	/**
	 * Sets Url To Send The Request Property
	 */	
	void setUrl( /**Url To Send The Request*/ String url){*
		this.DUrl = url;
	*}

	/**
	 * Gets Url To Send The Request Property
	 */	
	String getUrl() {*
		return this.DUrl;
	*}

	/**
	 * Sets Do You Need With Credentials Property
	 */	
	void setWithCredentials( /**Do You Need With Credentials*/ boolean withCredentials){*
		this.DWithCredentials = withCredentials;
	*}

	/**
	 * Gets Do You Need With Credentials Property
	 */	
	boolean isWithCredentials() {*
		return this.DWithCredentials;
	*}




	/* START HERE PLACE FOR CUSTOM ZTL FUNCTIONS */
	/** Adds payload to HTTP requests. Typically used with POST requests as GET
	 * uses the URL query string.

 	<example>
	You want to add JSON data to your POST request to be send to the server
	<code>
	addPayloadToHttp("{"key":"value"}");<br>
	<br>
	</code>
	</example>
	 */
	void addPayloadToHttp(String data){*
		this.DPayload = data;
	*}

	/**
	 * Trigger Execution of the given URL and parameter list
	 */
	void triggerExecution () {*
		this.DTrigger = "GO";
	*}
}
